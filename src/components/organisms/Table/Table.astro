---
import { GuestGenders, type Guest } from "@models/types/guest";
import { tables } from "../../../data.json";
import FemaleIcon from "@public/icons/female.svg";
import MaleIcon from "@public/icons/male.svg";
import splitLine1Image from "@public/images/split-line--1.png";
import splitLine2Image from "@public/images/split-line--2.png";
import splitLine3Image from "@public/images/split-line--3.png";
import flower19Image from "@public/images/flower--19.png";
import { Image } from "astro:assets";

interface Props {
  guest: Guest;
}

export type Table = Guest[];

const { guest } = Astro.props;

const table: Table =
  tables.find((guests) => isGuestInTable(guests, guest.id)) || [];

const tableIndex = tables.findIndex((guests) =>
  isGuestInTable(guests, guest.id)
);

function isGuestInTable(guests: Guest[], guestId: string): boolean {
  return guests.some((tableGuest) => tableGuest.id === guestId);
}
---

<section id="table" class="host">
  <Image
    class={"split-line split-line--1"}
    src={splitLine1Image}
    alt={"Split line"}
  />
  <div class="head">
    <h2 class="title font--heading">Encuentra tu mesa</h2>

    <div class="info">
      <p class="description">
        Tu mesa es la <span class="description--bold">#{tableIndex + 1}</span>
      </p>
      <p class="description">Se encuenta resaltada en el siguiente mapa</p>
    </div>
  </div>

  <div class="body">
    <div class="sketch">
      {
        tables.map((table, sketchTableIndex) => (
          <div
            class={`sketch__item table table--${tableIndex === sketchTableIndex ? "active" : "inactive"} table--${sketchTableIndex + 1} `}
            style={`grid-area: table--${sketchTableIndex + 1}`}
          >
            <span>{sketchTableIndex + 1}</span>
            {tableIndex === sketchTableIndex && (
              <Image
                class={"table__flower"}
                src={flower19Image}
                alt={"Flower"}
              />
            )}
          </div>
        ))
      }
      <div class="sketch__item entry">Entrada</div>
    </div>

    <div class="with">
      <h3 class="subtitle">Compartes tu mesa con:</h3>

      <ul class="with__list">
        {
          table
            .filter((tableGuest) => tableGuest.id !== guest.id)
            .map((tableGuest) => (
              <>
                <li class="guest">
                  {tableGuest.gender === GuestGenders.female && (
                    <FemaleIcon class="guest__icon" width={32} height={32} />
                  )}

                  {tableGuest.gender === GuestGenders.male && (
                    <MaleIcon class="guest__icon" width={32} height={32} />
                  )}

                  <p class="guest__name">{tableGuest.name}</p>
                </li>
                {tableGuest.coupon && (
                  <li class="guest">
                    <MaleIcon class="guest__icon" width={32} height={32} />
                    <p class="guest__name">{`Invitado de ${tableGuest.name}`}</p>
                  </li>
                )}
              </>
            ))
        }

        {
          guest.coupon && (
            <li class="guest">
              <MaleIcon class="guest__icon" width={32} height={32} />
              <p class="guest__name">Invitado de {guest.name}</p>
            </li>
          )
        }
      </ul>
    </div>
  </div>
  <Image
    class={"split-line split-line--3"}
    src={splitLine3Image}
    alt={"Split line"}
  />
  <Image
    class={"split-line split-line--2"}
    src={splitLine2Image}
    alt={"Split line"}
  />
</section>

<style>
  .host {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 2.4rem;
    padding: 3.5rem 1.5rem;
    padding-bottom: 11rem;

    @media (min-width: 435px) {
      padding-bottom: 3.5rem;
    }

    @media (min-width: 1024px) {
      justify-content: center;
      gap: 2.6rem;
      padding: 3.5rem 2rem;
      padding-bottom: 5rem;
    }
  }

  .split-line {
    position: absolute;
  }

  .split-line--1 {
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    opacity: 0.05;

    @media (min-width: 435px) {
      width: 28.125rem;
      right: 0;
      margin: 0 auto;
    }

    @media (min-width: 1024px) {
      width: 31.25rem;
    }
  }

  .split-line--2 {
    bottom: 0;
    right: 0;
    width: 60%;
    height: auto;
    opacity: 0.05;

    @media (min-width: 435px) {
      width: 17.5rem;
    }

    @media (min-width: 1024px) {
      width: 20rem;
    }
  }

  .split-line--3 {
    display: none;
    bottom: 4rem;
    left: 0;
    height: auto;
    opacity: 0.05;

    @media (min-width: 1024px) {
      display: inline-block;
      width: 19.375rem;
    }
  }

  .head {
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .description {
    font-size: 1.2rem;
    text-align: center;

    @media (min-width: 768px) {
      font-size: 1.4rem;
    }

    @media (min-width: 1024px) {
      font-size: 1.6rem;
    }
  }

  .description--bold {
    font-weight: bold;
    color: var(--primary-dark);
  }

  .title {
    display: flex;
    align-items: baseline;
    justify-content: center;
    gap: 0.2ch;
    font-size: 2.2rem;

    @media (min-width: 768px) {
      font-size: 3rem;
    }

    @media (min-width: 1024px) {
      font-size: 3.8rem;
    }
  }

  .body {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;

    @media (min-width: 1024px) {
      flex-direction: row;
      justify-content: center;
      gap: 5.5rem;
    }
  }

  .sketch {
    display: grid;
    width: min(37.5rem, 90%);
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-gap: 0.5rem;
    grid-template-areas:
      ".        table--10 .         table--3  table--2  table--1"
      ".        .         .         .         .         ."
      "table--8 table--6  .         .         .         ."
      "table--9 table--7  entry     .         table--4  table--5";

    @media (min-width: 768px) {
      gap: 0.75rem;
    }

    @media (min-width: 1024px) {
      gap: 1rem;
    }
  }

  .sketch__item {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.25rem;

    aspect-ratio: 1 / 1;
    font-size: 1.2rem;

    @media (min-width: 768px) {
      font-size: 1.4rem;
    }

    @media (min-width: 1024px) {
      font-size: 1.8rem;
    }
  }

  .entry {
    grid-area: entry;
    font-size: 0.75rem;
    border: 0.0625rem solid var(--secondary);
    color: var(--secondary);

    @media (min-width: 420px) {
      font-size: 0.9rem;
    }

    @media (min-width: 768px) {
      border-width: 0.125rem;
      font-size: 1.1rem;
    }

    @media (min-width: 1024px) {
      font-size: 1.3rem;
    }
  }

  .table {
    border: 0.0625rem solid var(--primary-50);
    color: var(--primary);
    font-weight: bold;

    @media (min-width: 768px) {
      border-width: 0.125rem;
    }
  }

  .table--active {
    position: relative;
    border: none;
    background-color: var(--primary);
    color: var(--white);
    animation: tableActive 2s infinite;
  }

  @keyframes tableActive {
    0%,
    100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.02);
      background-color: var(--primary-dark);
    }
  }

  .table__flower {
    position: absolute;
    bottom: -0.2rem;
    left: -0.2rem;
    width: 1.4rem;
    height: auto;

    @media (min-width: 768px) {
      width: 2rem;
      bottom: -0.4rem;
      left: -0.4rem;
    }
  }

  .with {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;

    @media (min-width: 768px) {
      gap: 1.75rem;
    }

    @media (min-width: 1024px) {
      gap: 2rem;
    }
  }

  .with__list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: 1fr;
    justify-content: center;
    gap: 1.5rem;

    @media (min-width: 768px) {
      gap: 1.75rem;
    }

    @media (min-width: 1024px) {
      gap: 2rem;
    }
  }

  .subtitle {
    font-size: 1.6rem;
    text-align: center;

    @media (min-width: 768px) {
      font-size: 2rem;
    }

    @media (min-width: 1024px) {
      font-size: 2.4rem;
    }
  }

  .guest {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
  }

  .guest__icon {
    color: var(--primary-50);
  }

  .guest__name {
    text-align: center;
    color: var(--black);
    font-size: 1.2rem;
    width: 7ch;

    @media (min-width: 768px) {
      font-size: 1.4rem;
    }
  }
</style>
